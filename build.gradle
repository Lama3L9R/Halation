buildscript {
    dependencies {
        classpath 'org.ow2.asm:asm:9.0'
        classpath 'org.ow2.asm:asm-commons:9.0'
        classpath 'org.ow2.asm:asm-tree:9.0'
        classpath 'org.ow2.asm:asm-util:9.0'
        classpath 'dev.architectury.loom:dev.architectury.loom.gradle.plugin:0.7.2-SNAPSHOT'
    }
}


plugins {
    id 'java'
    id 'dev.architectury.loom' version '0.7.2-SNAPSHOT'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "1.6.0"
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.minecraftforge.net/'
    }
    maven {
        url 'https://maven.architectury.dev/'
    }
    maven {
        url 'https://files.minecraftforge.net/maven/'
    }
    maven {
        url 'https://maven.fabricmc.net/'
    }
    maven {
        url 'https://maven.shedaniel.me/'
    }
    maven {
        name = 'kotlinforforge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    gradlePluginPortal()
}


apply plugin: 'java'

version = "${minecraft_version}-${mod_version}"
group = 'icu.lama'
archivesBaseName = ''

loom {
    mixinConfig "halation.mixins.json"

    silentMojangMappingsLicense()
    dataGen {
        mod ''
    }
    addTaskBeforeRun(":${project.name}:classes")
}



sourceSets {
    main {
        resources {
            main.kotlin.srcDirs += 'src/main/kotlin'
            srcDirs += 'src/generated/resources'
            exclude '.cache'
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings minecraft.officialMojangMappings()
    forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation 'thedarkcolour:kotlinforforge:1.16.0'
    implementation 'org.mongodb:mongodb-driver:3.12.10'

}

java {
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release.set(targetVersion)
    }
}

processResources {
    inputs.property 'version', mod_version

    filesMatching("META-INF/mods.toml") {
        expand 'version': mod_version
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "",
                "Specification-Vendor"    : "",
                "Specification-Version"   : "",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }

    }
}
